[tool.poetry]
name = "adetailer-2cn-plus"
version = "0.1.0"
description = "Advanced face detection and alignment pipeline for A1111"
authors = ["ADetailer 2CN Team <team@adetailer2cn.com>"]
readme = "README.md"
packages = [{include = "ad2cn"}]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.24.0"
opencv-python = "^4.8.0"
pillow = "^10.0.0"
pydantic = "^2.0.0"
loguru = "^0.7.0"
tqdm = "^4.65.0"
pyyaml = "^6.0"
albumentations = "^1.3.0"
onnxruntime-gpu = "^1.15.0"
insightface = "^0.7.3"
facenet-pytorch = "^0.2.1"
matplotlib = "^3.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"

[tool.poetry.scripts]
detect = "scripts.detect:main"

[tool.poetry.urls]
"Homepage" = "https://github.com/adetailer2cn/adetailer-2cn-plus"
"Repository" = "https://github.com/adetailer2cn/adetailer-2cn-plus"
"Bug Tracker" = "https://github.com/adetailer2cn/adetailer-2cn-plus/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ad2cn",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
